/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.18
 * Generated at: 2024-02-23 08:12:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class signup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!doctype html>\n");
      out.write("\n");
      out.write("<html lang=\"en\"> \n");
      out.write("\n");
      out.write(" <head> \n");
      out.write("\n");
      out.write("  <meta charset=\"UTF-8\"> \n");
      out.write("\n");
      out.write("  <title>School management login</title> \n");
      out.write("\n");
      out.write("  <style>\n");
      out.write("  @import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500;600;700&display=swap');\n");
      out.write("*\n");
      out.write("{\n");
      out.write("  margin: 0;\n");
      out.write("  padding: 0;\n");
      out.write("  box-sizing: border-box;\n");
      out.write("  font-family: 'Quicksand', sans-serif;\n");
      out.write("}\n");
      out.write("body \n");
      out.write("{\n");
      out.write("  display: flex;\n");
      out.write("  justify-content: center;\n");
      out.write("  align-items: center;\n");
      out.write("  min-height: 100vh;\n");
      out.write("  background: #000;\n");
      out.write("}\n");
      out.write("section \n");
      out.write("{\n");
      out.write("  position: absolute;\n");
      out.write("  width: 100vw;\n");
      out.write("  height: 100vh;\n");
      out.write("  display: flex;\n");
      out.write("  justify-content: center;\n");
      out.write("  align-items: center;\n");
      out.write("  gap: 2px;\n");
      out.write("  flex-wrap: wrap;\n");
      out.write("  overflow: hidden;\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("section span \n");
      out.write("{\n");
      out.write("  position: relative;\n");
      out.write("  display: block;\n");
      out.write("  width: calc(6.25vw - 2px);\n");
      out.write("  height: calc(6.25vw - 2px);\n");
      out.write("  background: #181818;\n");
      out.write("  z-index: 2;\n");
      out.write("  transition: 1.5s;\n");
      out.write("}\n");
      out.write("section span:hover \n");
      out.write("{\n");
      out.write("  background: #0f0;\n");
      out.write("  transition: 0s;\n");
      out.write("}\n");
      out.write("\n");
      out.write("section .container\n");
      out.write("{\n");
      out.write("  position: absolute;\n");
      out.write("  width: 500px;\n");
      out.write("  background: #222;  \n");
      out.write("  z-index: 1000;\n");
      out.write("  display: flex;\n");
      out.write("  justify-content: center;\n");
      out.write("  align-items: center;\n");
      out.write("  padding: 40px;\n");
      out.write("  border-radius: 4px;\n");
      out.write("  box-shadow: 0 15px 35px rgba(0,0,0,9);\n");
      out.write("}\n");
      out.write("section .container .content \n");
      out.write("{\n");
      out.write("  position: relative;\n");
      out.write("  width: 100%;\n");
      out.write("  display: flex;\n");
      out.write("  justify-content: center;\n");
      out.write("  align-items: center;\n");
      out.write("  flex-direction: column;\n");
      out.write("  gap: 40px;\n");
      out.write("}\n");
      out.write("section .container .content h2 \n");
      out.write("{\n");
      out.write("  font-size: 2em;\n");
      out.write("  color: #0f0;\n");
      out.write("  text-transform: uppercase;\n");
      out.write("}\n");
      out.write("section .container .content .form \n");
      out.write("{\n");
      out.write("  width: 100%;\n");
      out.write("  display: flex;\n");
      out.write("  flex-direction: column;\n");
      out.write("  gap: 25px;\n");
      out.write("}\n");
      out.write("section .container .content .form .inputBox\n");
      out.write("{\n");
      out.write("  position: relative;\n");
      out.write("  width: 100%;\n");
      out.write("}\n");
      out.write("section .container .content .form .inputBox input \n");
      out.write("{\n");
      out.write("  position: relative;\n");
      out.write("  width: 100%;\n");
      out.write("  background: #333;\n");
      out.write("  border: none;\n");
      out.write("  outline: none;\n");
      out.write("  padding: 25px 10px 7.5px;\n");
      out.write("  border-radius: 4px;\n");
      out.write("  color: #fff;\n");
      out.write("  font-weight: 500;\n");
      out.write("  font-size: 1em;\n");
      out.write("}\n");
      out.write("select.inputBox \n");
      out.write("{\n");
      out.write("  position: relative;\n");
      out.write("  width: 100%;\n");
      out.write("  background: #333;\n");
      out.write("  border: none;\n");
      out.write("  outline: none;\n");
      out.write("  padding: 25px 10px 7.5px;\n");
      out.write("  border-radius: 4px;\n");
      out.write("  color: #fff;\n");
      out.write("  font-weight: 500;\n");
      out.write("  font-size: 1em;\n");
      out.write("}\n");
      out.write("section .container .content .form .inputBox i \n");
      out.write("{\n");
      out.write("  position: absolute;\n");
      out.write("  left: 0;\n");
      out.write("  padding: 15px 10px;\n");
      out.write("  font-style: normal;\n");
      out.write("  color: #aaa;\n");
      out.write("  transition: 0.5s;\n");
      out.write("  pointer-events: none;\n");
      out.write("}\n");
      out.write(".container .content .form .inputBox input:focus ~ i,\n");
      out.write(".container .content .form .inputBox input:valid ~ i\n");
      out.write("{\n");
      out.write("  transform: translateY(-7.5px);\n");
      out.write("  font-size: 0.8em;\n");
      out.write("  color: #fff;\n");
      out.write("}\n");
      out.write(".container .content .form .links \n");
      out.write("{\n");
      out.write("  position: relative;\n");
      out.write("  width: 100%;\n");
      out.write("  display: flex;\n");
      out.write("  justify-content: space-between;\n");
      out.write("}\n");
      out.write(".container .content .form .links a \n");
      out.write("{\n");
      out.write("  color: #fff;\n");
      out.write("  text-decoration: none;\n");
      out.write("}\n");
      out.write(".container .content .form .links a:nth-child(2)\n");
      out.write("{\n");
      out.write("  color: #0f0;\n");
      out.write("  font-weight: 600;\n");
      out.write("}\n");
      out.write(".container .content .form .inputBox input[type=\"submit\"]\n");
      out.write("{\n");
      out.write("  padding: 10px;\n");
      out.write("  background: #0f0;\n");
      out.write("  color: #000;\n");
      out.write("  font-weight: 600;\n");
      out.write("  font-size: 1.35em;\n");
      out.write("  letter-spacing: 0.05em;\n");
      out.write("  cursor: pointer;\n");
      out.write("}\n");
      out.write("input[type=\"submit\"]:active\n");
      out.write("{\n");
      out.write("  opacity: 0.6;\n");
      out.write("}\n");
      out.write("@media (max-width: 900px)\n");
      out.write("{\n");
      out.write("  section span \n");
      out.write("  {\n");
      out.write("    width: calc(10vw - 2px);\n");
      out.write("    height: calc(10vw - 2px);\n");
      out.write("  }\n");
      out.write("}\n");
      out.write("@media (max-width: 600px)\n");
      out.write("{\n");
      out.write("  section span \n");
      out.write("  {\n");
      out.write("    width: calc(20vw - 2px);\n");
      out.write("    height: calc(20vw - 2px);\n");
      out.write("  }\n");
      out.write("}\n");
      out.write("  </style>\n");
      out.write("\n");
      out.write(" </head> \n");
      out.write("\n");
      out.write(" <body> <!-- partial:index.partial.html --> \n");
      out.write("\n");
      out.write("  <section> \n");
      out.write("\n");
      out.write("   <div class=\"container\"> \n");
      out.write("\n");
      out.write("    <div class=\"content\"> \n");
      out.write("\n");
      out.write("     <h2>Create Account</h2> \n");
      out.write("\n");
      out.write("     <form class=\"form\" action=\"Register\" method=\"POST\"> \n");
      out.write("\n");
      out.write("      <div class=\"inputBox\"> \n");
      out.write("\n");
      out.write("       <input type=\"text\" name=\"username\" required> <i>Username</i> \n");
      out.write("\n");
      out.write("      </div> \n");
      out.write("        <div class=\"inputBox\"> \n");
      out.write("\n");
      out.write("       <input type=\"text\"  name=\"email\" required> <i>Email</i> \n");
      out.write("\n");
      out.write("      </div> \n");
      out.write("\n");
      out.write("      <div class=\"inputBox\"> \n");
      out.write("\n");
      out.write("       <input type=\"password\" name=\"password\" required> <i>Password</i> \n");
      out.write("\n");
      out.write("      </div> \n");
      out.write("          \n");
      out.write("\n");
      out.write("         \n");
      out.write("\n");
      out.write("<div class=\"links\"> <a href=\"#\">Already have account</a> <a href=\"/SchoolManagement/login.jsp\">Login</a> \n");
      out.write("\n");
      out.write("      </div> \n");
      out.write("     \n");
      out.write("\n");
      out.write("      <div class=\"inputBox\"> \n");
      out.write("\n");
      out.write("       <input type=\"submit\" value=\"Create\"> \n");
      out.write("\n");
      out.write("      </div> \n");
      out.write("\n");
      out.write("     </div> \n");
      out.write("\n");
      out.write("    </div> \n");
      out.write("\n");
      out.write("   </form> \n");
      out.write("\n");
      out.write("  </section> <!-- partial --> \n");
      out.write("\n");
      out.write(" </body>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
